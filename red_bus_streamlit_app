import streamlit as st
import pandas as pd
import mysql.connector

# MySQL connection
def create_connection():
    return mysql.connector.connect(
        host="localhost",
        user="root",
        password="",
        database="Red_bus_project"
    )

# Function to load data from the MySQL database
def load_data():
    conn = create_connection()
    query = "SELECT * FROM bus_routes1"
    return pd.read_sql(query, conn)

# Load data
data = load_data()

# Streamlit application
st.title("Bus Information Dashboard")

# Filters
bustype = st.sidebar.multiselect("Bus Type", options=data['bustype'].unique())
route_name = st.sidebar.multiselect("Route Name", options=data['route_name'].unique())
price_range = st.sidebar.slider("Price Range", min_value=0, max_value=int(data['price'].max()), value=(0, int(data['price'].max())))
star_rating = st.sidebar.slider("Star Rating", min_value=0.0, max_value=5.0, value=(0.0, 5.0))
seat_availability = st.sidebar.slider("Seats Available", min_value=0, max_value=int(data['seats_available'].max()), value=(0, int(data['seats_available'].max())))

# Apply filters to the data
filtered_data = data.copy()

if bustype:
    filtered_data = filtered_data[filtered_data['bustype'].isin(bustype)]
if route_name:
    filtered_data = filtered_data[filtered_data['route_name'].isin(route_name)]
filtered_data = filtered_data[(filtered_data['price'] >= price_range[0]) & (filtered_data['price'] <= price_range[1])]
filtered_data = filtered_data[(filtered_data['star_rating'] >= star_rating[0]) & (filtered_data['star_rating'] <= star_rating[1])]
filtered_data = filtered_data[filtered_data['seats_available'] >= seat_availability[0]]

# Display filtered data
st.subheader("Filtered Data")
st.write(filtered_data)

# Optionally display a data summary
st.subheader("Data Summary")
st.write(filtered_data.describe())

# Show details for selected bus route
if not filtered_data.empty:
    selected_bus = st.selectbox("Select a Bus", filtered_data['busname'].unique())
    bus_details = filtered_data[filtered_data['busname'] == selected_bus]
    st.write(bus_details)

